342. Powe of Four
Solution:-

      class Solution {
    public boolean isPowerOfFour(double n) {
        if(n==1)
         return true;
        else if(n<1)
         return false;
         else
          return isPowerOfFour(n/4.0); 
        
    }
}
        
Example 1:

Input: n = 16
Output: true
Example 2:

Input: n = 5
Output: false
Example 3:

Input: n = 1
Output: true        

/*
 * Here the function checks if the number n is a power of four by recursively dividing it by 4 until it reaches 1 or less than 1. 
 * If it reaches 1, it returns true, indicating that n is a power of four. If it goes below 1, it returns false.
 * Explanation:
 * 1. The function checks if n is equal to 1, in which case it returns true, indicating that 1 is a power of four.
 * 2. If n is less than 1, it returns false, indicating that numbers less than 1 cannot be powers of four.
 * 3. If n is greater than 1, it recursively calls itself with n divided by 4. This continues until n is reduced to 1 or less than 1.
 * code-
 * class Solution {
    public boolean isPowerOfFour(double n) {
        if(n == 1)
            return true;
        else if(n < 1)
            return false;
        else
            return isPowerOfFour(n / 4.0);
    }
// This is a recursive function that checks if a number is a power of four.}
       
 */