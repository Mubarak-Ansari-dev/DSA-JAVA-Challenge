
283. Move Zeroes


class Solution {
    public void moveZeroes(int[] nums) {
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0){
                nums[count++] = nums[i];
            }
        }
        while(count < nums.length){
            nums[count++] = 0;
        }
    }
}

// Time Complexity: O(n)
// Space Complexity: O(1)

485. Max Consecutive Ones

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int n = nums.length;
        // to store maximum count result
        int maxi = 0;
        // current count
        int count = 0;
        for(int i=0; i<n; i++){
            if(nums[i]== 1){
                count++;
                maxi= Math.max(maxi, count);
            }
            else
              count = 0;
        }
        return maxi;
    }
}
// Time Complexity: O(n)
// Space Complexity: O(1)